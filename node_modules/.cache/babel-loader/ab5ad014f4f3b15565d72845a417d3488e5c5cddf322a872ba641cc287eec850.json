{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamad\\\\OneDrive\\\\Desktop\\\\JS\\\\p-tris\\\\src\\\\components\\\\Board\\\\Board.js\";\nimport Square from \"../Square/Square\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    squares,\n    onClick,\n    turn,\n    winningSquares\n  } = _ref;\n  const createSquares = values => values.map(value => /*#__PURE__*/_jsxDEV(Square, {\n    winner: winningSquares.includes(value),\n    turn: turn,\n    onClick: () => onClick(value),\n    value: squares[value]\n  }, `square_${value}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([0, 1, 2])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([3, 4, 5])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: createSquares([6, 7, 8])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","Board","squares","onClick","turn","winningSquares","createSquares","values","map","value","includes"],"sources":["C:/Users/aamad/OneDrive/Desktop/JS/p-tris/src/components/Board/Board.js"],"sourcesContent":["import Square from \"../Square/Square\";\r\nimport \"./Board.css\";\r\n\r\nconst Board = ({ squares, onClick, turn, winningSquares }) => {\r\n  const createSquares = (values) =>\r\n    values.map((value) => (\r\n      <Square\r\n        winner={winningSquares.includes(value)}\r\n        turn={turn}\r\n        onClick={() => onClick(value)}\r\n        value={squares[value]}\r\n        key={`square_${value}`}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"row\">{createSquares([0, 1, 2])}</div>\r\n      <div className=\"row\">{createSquares([3, 4, 5])}</div>\r\n      <div className=\"row\">{createSquares([6, 7, 8])}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAO,aAAa;AAAC;AAErB,MAAMC,KAAK,GAAG,QAAgD;EAAA,IAA/C;IAAEC,OAAO;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAe,CAAC;EACvD,MAAMC,aAAa,GAAIC,MAAM,IAC3BA,MAAM,CAACC,GAAG,CAAEC,KAAK,iBACf,QAAC,MAAM;IACL,MAAM,EAAEJ,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAE;IACvC,IAAI,EAAEL,IAAK;IACX,OAAO,EAAE,MAAMD,OAAO,CAACM,KAAK,CAAE;IAC9B,KAAK,EAAEP,OAAO,CAACO,KAAK;EAAE,GAChB,UAASA,KAAM,EAAC;IAAA;IAAA;IAAA;EAAA,QAEzB,CAAC;EAEJ,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAK,SAAS,EAAC,KAAK;MAAA,UAAEH,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eACrD;MAAK,SAAS,EAAC,KAAK;MAAA,UAAEA,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eACrD;MAAK,SAAS,EAAC,KAAK;MAAA,UAAEA,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAEV,CAAC;AAAC,KAnBIL,KAAK;AAqBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}