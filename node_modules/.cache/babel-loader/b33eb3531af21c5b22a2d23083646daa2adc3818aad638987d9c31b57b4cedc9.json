{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamad\\\\OneDrive\\\\Desktop\\\\JS\\\\react-tris\\\\p-tris\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst winningPositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\nconst App = () => {\n  _s();\n  const [turn, setTurn] = useState(\"X\");\n  const [squares, setSquares] = useState(Array(9).fill(null)); //estado en cuadrado\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X: 0,\n    O: 0\n  }); //estado en circulo\n\n  const reset = () => {\n    setTurn(\"X\");\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  };\n  const checkForWinner = newSquares => {\n    for (let i = 0; i < winningPositions.length; i++) {\n      const [a, b, c] = winningPositions[i];\n      if (newSquares[a] && newSquares[a] === newSquares[b] && newSquares[a] === newSquares[c]) {\n        //hay un ganador\n        endGame(newSquares[a], winningPositions[i]); //le pasamos todas las posibles winning position para chekear\n        return;\n      }\n    }\n    if (!newSquares.includes(null)) {\n      //empate\n      endGame(null, Array.from(Array(10).keys()));\n      return;\n    }\n    setTurn(turn === \"X\" ? \"O\" : \"X\");\n  };\n  const handleClick = square => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  };\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if (result !== null) {\n      setScore({\n        ...score,\n        [result]: score[result] + 1\n      });\n    }\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      winningSquares: winningSquares,\n      turn: turn,\n      squares: squares,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SiniX3YO7AY859940PREvX+mXwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Board","winningPositions","App","turn","setTurn","squares","setSquares","Array","fill","winningSquares","setWinningSquares","score","setScore","X","O","reset","checkForWinner","newSquares","i","length","a","b","c","endGame","includes","from","keys","handleClick","square","splice","result","setTimeout"],"sources":["C:/Users/aamad/OneDrive/Desktop/JS/react-tris/p-tris/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board/Board\";\n\nconst winningPositions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst App = () => {\n  const [turn, setTurn] = useState(\"X\");\n  const [squares, setSquares] = useState(Array(9).fill(null)); //estado en cuadrado\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X: 0,\n    O: 0,\n  }); //estado en circulo\n\n  const reset = () => {\n    setTurn(\"X\");\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  };\n\n  const checkForWinner = (newSquares) => {\n    for (let i = 0; i < winningPositions.length; i++) {\n      const [a, b, c] = winningPositions[i];\n      if (\n        newSquares[a] &&\n        newSquares[a] === newSquares[b] &&\n        newSquares[a] === newSquares[c]\n      ) {\n        //hay un ganador\n        endGame(newSquares[a], winningPositions[i]); //le pasamos todas las posibles winning position para chekear\n        return;\n      }\n    }\n\n    if (!newSquares.includes(null)) {\n      //empate\n      endGame(null, Array.from(Array(10).keys()));\n      return;\n    }\n    setTurn(turn === \"X\" ? \"O\" : \"X\");\n  };\n\n  const handleClick = (square) => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  };\n\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if (result !== null) {\n      setScore({\n        ...score,\n        [result]: score[result] + 1,\n      });\n    }\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  };\n\n  return (\n    <div className=\"container\">\n      <Board\n        winningSquares={winningSquares}\n        turn={turn}\n        squares={squares}\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}